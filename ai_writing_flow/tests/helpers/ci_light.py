"""\nTest helpers to control CI-Light deterministic mode.\n\nUsage:\n    from ai_writing_flow.tests.helpers.ci_light import enable_ci_light, disable_ci_light, kb_unavailable\n\n    def setup_module():\n        enable_ci_light()\n\n    def teardown_module():\n        disable_ci_light()\n\n    def test_something():\n        with kb_unavailable():\n            ...\n"""\nfrom contextlib import contextmanager\nimport os\n\n\ndef enable_ci_light():\n    os.environ['CI_LIGHT'] = '1'\n\n\ndef disable_ci_light():\n    os.environ.pop('CI_LIGHT', None)\n    os.environ.pop('CI_LIGHT_KB_AVAILABLE', None)\n\n\n@contextmanager\ndef kb_unavailable():\n    prev = os.environ.get('CI_LIGHT_KB_AVAILABLE')\n    try:\n        os.environ['CI_LIGHT_KB_AVAILABLE'] = '0'\n        yield\n    finally:\n        if prev is None:\n            os.environ.pop('CI_LIGHT_KB_AVAILABLE', None)\n        else:\n            os.environ['CI_LIGHT_KB_AVAILABLE'] = prev\n